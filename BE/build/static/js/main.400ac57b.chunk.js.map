{"version":3,"sources":["components/Form.js","components/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","value","this","props","modeModify","todo","action","method","onSubmit","e","preventDefault","todoSubmit","target","bind","type","name","className","mode","placeholder","onChange","onChangeModify","autocomplete","Component","ToDo","todoList","map","item","id","checked","onClick","todoModify","todoDelete","todoChecked","App","state","modify","fetchToDo","fetch","then","response","json","data","setState","getCookie","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","todoAdd","todo_text","csrftoken","headers","body","JSON","stringify","catch","error","console","log","todoModifyEnd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.400ac57b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    let value = this.props.modeModify.todo;\r\n    return (\r\n      <form action='/' method='post' onSubmit={function(e){\r\n        e.preventDefault();\r\n        this.props.todoSubmit(e.target.todo.value);\r\n        e.target.todo.value = '';\r\n      }.bind(this)}>\r\n        <input\r\n          type='text'\r\n          name='todo'\r\n          className={this.props.modeModify.mode?'modify':''}\r\n          placeholder='오늘 할 일을 입력하세요'\r\n          value={value}\r\n          onChange={this.props.onChangeModify}\r\n          autocomplete=\"off\"\r\n        />\r\n        <input type='submit' value='+' />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\n\r\nclass ToDo extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.todoList.map(item => {\r\n          return (\r\n            <li key={item.id} id={item.id} className={item.id === this.props.modeModify.id?'modify':''}>\r\n              <span className={item.checked?'checked':''}>\r\n                {item.todo}\r\n              </span>\r\n              <span className='right'>\r\n                <button onClick={function(e) {\r\n                  this.props.todoModify(item);\r\n                }.bind(this)}>Edit</button>\r\n                <button onClick={function(e) {\r\n                  this.props.todoDelete(item);\r\n                }.bind(this)}>×</button>\r\n                <button onClick={function(e) {\r\n                  this.props.todoChecked(item);\r\n                }.bind(this)}>✓</button>\r\n              </span>\r\n            </li>\r\n          )\r\n        })}\r\n    </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDo;","import React, { Component } from 'react';\nimport Form from './components/Form'\nimport ToDo from './components/ToDo'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      todo: [],\n      modify: {\n        mode: false,\n        id: 0,\n        todo: '',\n      },\n    }\n    this.fetchToDo.bind(this);\n  };\n\n  componentWillMount() {\n    this.fetchToDo()\n  }\n\n  fetchToDo() {\n    fetch('http://localhost:8000/todo/list/')\n    .then(response => response.json())\n    .then((data) => this.setState({\n      todo: data,\n    }));\n  }\n\n  render() {\n    const getCookie = (name) => {\n      let cookieValue = null;\n      if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n            break;\n          }\n        }\n      }\n      return cookieValue;\n    }\n\n    const todoSubmit = (todo_text) => {\n      if(this.state.modify.mode === false) {\n        todoAdd(todo_text);\n      } else {\n        todoModify(todo_text);\n      }\n      todoModifyEnd()\n    }\n\n    const todoAdd = (todo_text) => {\n      const csrftoken = getCookie('csrftoken');\n      fetch('http://localhost:8000/todo/create/', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken,\n        },\n        body: JSON.stringify({\n          id: null,\n          todo: todo_text,\n          checked: false,\n        })\n      }).then((response) => {\n        this.fetchToDo()\n      }).catch(function(error) {\n        console.log('ERROR:', error)\n      })\n    }\n    \n    const todoModifyStart = (todo) => {\n      if (this.state.modify.id === todo.id) {\n        todoModifyEnd()\n      } else {\n        this.setState({\n          modify: {\n            mode: true,\n            id: todo.id,\n            todo: todo.todo,\n          }\n        });\n      }\n    }\n\n    const todoModifyOnChange = (e) => {\n      this.setState({\n        modify: {\n          mode: this.state.modify.mode,\n          id: this.state.modify.id,\n          todo: e.target.value,\n        },\n      })\n    }\n\n    const todoModify = (todo_text) => {\n      let csrftoken = getCookie('csrftoken');\n      fetch(`http://localhost:8000/todo/update/${this.state.modify.id}/`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken,\n        },\n        body: JSON.stringify({\n          todo: this.state.modify.todo,\n        })\n      }).then(() => {\n        this.fetchToDo()\n      })\n    }\n\n    const todoModifyEnd = () => {     \n      this.setState({\n        modify:{\n          mode: false,\n          id: 0,\n          todo: '',\n        }\n      })\n    }\n\n    const todoDelete = (todo) => {\n      let csrftoken = getCookie('csrftoken');\n      fetch(`http://localhost:8000/todo/delete/${todo.id}/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken,\n        },\n      }).then((response) => {\n        this.fetchToDo()\n      })\n    }\n\n    const todoChecked = (todo) => {\n      let csrftoken = getCookie('csrftoken');\n      todo.checked = !todo.checked;\n      fetch(`http://localhost:8000/todo/update/${todo.id}/`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken,\n        },\n        body: JSON.stringify({\n          todo: todo.todo,\n          checked: todo.checked,\n        })\n      }).then(() => {\n        this.fetchToDo()\n      })\n    }\n\n    const todoSaved = (_todo) => {\n      localStorage.setItem(ToDo, JSON.stringify(_todo));\n      this.setState({\n        todo: _todo,\n      });\n    }\n\n    return (\n      <div id='App'>\n        <Form\n        todoSubmit={todoSubmit}\n        modeModify={this.state.modify}\n        onChangeModify={todoModifyOnChange}\n        />\n        <ToDo\n          todoList={this.state.todo}\n          modeModify={this.state.modify}\n          todoModify={todoModifyStart}\n          todoDelete={todoDelete}\n          todoChecked={todoChecked}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}